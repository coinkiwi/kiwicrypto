{"name":"KiwiCrypto","tagline":"Cryptographic library to be used in browser JS applications.","body":"KiwiCrypto\r\n==========\r\n\r\nPurpose\r\n--------\r\n\r\nKiwiCrypto provides pure Javascript cryptographic modules for web applications. It is best suited for\r\nSingle Page Applications, AngularJS integration, and client-side security focused apps. It is designed\r\nfrom ground up to be modular, grunt-based and bower-enabled. It is written in CoffeeScript.\r\n\r\n**NOTE**:\r\n\r\nThis library is currently in development. It is not finished yet. \r\nVersion *0.0.x* should be considered development only.\r\nNothing should be considered stable or working.\r\nIf something works, it is by pure coincidence.\r\n\r\n\r\n\r\nWhy new JS crypto library?\r\n--------------------------\r\n\r\nThe main focus was to create a single modular project,\r\nwith ability to generate a single dependency that can be easily maintained and extended when needed.\r\n\r\nKiwiCrypto offers the perks of a modern, CoffeeScript based module:\r\n\r\n  * **grunt**-based\r\n  * **bower**-enabled\r\n  * **npm**-enabled\r\n  * documentation, using **docco** and **codo**\r\n  * **lint**-checked codebase\r\n  * in **CoffeScript**, with classes and modular design, and\r\n  * unit tests, using **Jasmine**\r\n  * compiles to a single **minified** and **uglified** dependency\r\n\r\nAt the time of writing, there were many libraries providing various crypto functionality in pure JavaScript \r\non the client side (pidCrypt, jsCrypto, SJCL, and so on). The problem was that to use them, all the commonly \r\nrequired functionality would be spread over multiple dependencies and projects. This makes it difficult for \r\nsecurity-centric solution to have a single consistent dependency. \r\nMoreover, none of the libraries was taking adventage of the modern Javascript stack. None was grunt-based, \r\nbower-enabled, client-side/server-side crypto library with tests and good documentation that could be used \r\nfor single-page AngularJS/Javascript applications. \r\n\r\n\r\n\r\n\r\nFeatures\r\n---------\r\n\r\n\r\n\r\nThe library currently supports:\r\n\r\n   * base64 (done)\r\n   * RC4 and random number generation\r\n   * Big Integers (almost done)\r\n   * RSA public/private keys (work in progress)\r\n   \r\n\r\n\r\nHow to use it\r\n--------------\r\n\r\n\r\nTo install it, use bower:\r\n\r\n    bower install kiwicrypto --save\r\n\r\n\r\nTo use it, import the main module:\r\n\r\n    var crypto = require(\"KiwiCrypto\");\r\n    var encodedString = crypto.Base64.stringToBase64(\"hello world\");\r\n\r\nSee [API documentation](docs/index.html) for more details.\r\n\r\n\r\n\r\n\r\nBuilding the library\r\n--------------------\r\n\r\nIn the root folder of the library:\r\n\r\n    grunt test          builds and tests the current codebase\r\n    grunt build         builds and browserifies the modules\r\n    grunt dist          prepares the distribution, minified/uglified version, with docs\r\n\r\n\r\n\r\n\r\nMore info\r\n---------\r\n\r\n[KiwiCrypto](http://coinkiwi.github.io/kiwicrypto)\r\n\r\n\r\nContributions\r\n-------------\r\n\r\nAny contribution and suggestions welcome and appreciated. Leave issues in the issue tracker.\r\nContributions and patches assume BSD-style or public domain attribution.\r\n\r\n\r\nOriginal JS code and ideas\r\n--------------------------\r\n\r\nThis library is based on work of multiple people that contributed their time and efforts.\r\nMany of those people remain anonymous. All of the original code has been released under public domain\r\nor BSD-style licencing scheme. All of the original code has been originally developed in Javascript.\r\nSee AUTHORS and LICENSE files for details.\r\n\r\n\r\n\r\n\r\n\r\nRelated work\r\n============\r\n\r\n* [SJCL](http://bitwiseshiftleft.github.io/sjcl/) - SHA, AES, HMAC\r\n* [crypto-js](https://code.google.com/p/crypto-js/) - MD5, SHA-1, SHA-2, SHA-3, AES, DES, RC4\r\n* [jscrypto](https://code.google.com/p/jscryptolib/) - AES, SHA-1, HMAC, base64, RSA\r\n* [Tom's Wu](http://www-cs-students.stanford.edu/~tjw/jsbn/) - jsbn, rsa, base64\r\n* [pidCrypt](https://www.pidder.com/pidcrypt/) - jsbn, rsa, base64, md5, sha\r\n* [crypto benchmarks](http://dominictarr.github.io/crypto-bench/)\r\n\r\n","google":"UA-45984699-2","note":"Don't delete this file! It's used internally to help with page regeneration."}